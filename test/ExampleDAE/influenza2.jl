
DAE.DAElist.DAE(elementLst = {DAE.Element.COMP(ident = Influenza, dAElist = {DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 110, columnNumberStart = 3, lineNumberEnd = 110, columnNumberEnd = 54, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 110, columnNumberStart = 3, lineNumberEnd = 110, columnNumberEnd = 54, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Time_to_Breakdown, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 98, columnNumberStart = 3, lineNumberEnd = 98, columnNumberEnd = 51, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 100, columnNumberStart = 3, lineNumberEnd = 100, columnNumberEnd = 44, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 100, columnNumberStart = 3, lineNumberEnd = 100, columnNumberEnd = 44, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 111, columnNumberStart = 3, lineNumberEnd = 111, columnNumberEnd = 50, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 111, columnNumberStart = 3, lineNumberEnd = 111, columnNumberEnd = 50, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Sickness_Duration, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 102, columnNumberStart = 3, lineNumberEnd = 102, columnNumberEnd = 50, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 115, columnNumberStart = 3, lineNumberEnd = 115, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 115, columnNumberStart = 3, lineNumberEnd = 115, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Immune_Period, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 106, columnNumberStart = 3, lineNumberEnd = 106, columnNumberEnd = 47, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 108, columnNumberStart = 3, lineNumberEnd = 108, columnNumberEnd = 52, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 108, columnNumberStart = 3, lineNumberEnd = 108, columnNumberEnd = 52, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 108, columnNumberStart = 3, lineNumberEnd = 108, columnNumberEnd = 52, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 108, columnNumberStart = 3, lineNumberEnd = 108, columnNumberEnd = 52, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Contraction_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 109, columnNumberStart = 3, lineNumberEnd = 109, columnNumberEnd = 45, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 113, columnNumberStart = 3, lineNumberEnd = 113, columnNumberEnd = 51, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 113, columnNumberStart = 3, lineNumberEnd = 113, columnNumberEnd = 51, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 125, columnNumberStart = 3, lineNumberEnd = 125, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 125, columnNumberStart = 3, lineNumberEnd = 125, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 125, columnNumberStart = 3, lineNumberEnd = 125, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 116, columnNumberStart = 3, lineNumberEnd = 116, columnNumberEnd = 55, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 117, columnNumberStart = 3, lineNumberEnd = 117, columnNumberEnd = 48, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 118, columnNumberStart = 3, lineNumberEnd = 118, columnNumberEnd = 42, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 120, columnNumberStart = 3, lineNumberEnd = 120, columnNumberEnd = 40, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 121, columnNumberStart = 3, lineNumberEnd = 121, columnNumberEnd = 34, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 122, columnNumberStart = 3, lineNumberEnd = 122, columnNumberEnd = 34, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 124, columnNumberStart = 3, lineNumberEnd = 124, columnNumberEnd = 43, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 127, columnNumberStart = 3, lineNumberEnd = 127, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUEQUATION(cr1 = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), cr2 = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 127, columnNumberStart = 3, lineNumberEnd = 127, columnNumberEnd = 56, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contraction_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contraction_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 32, columnNumberStart = 3, lineNumberEnd = 32, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Period, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Period, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 32, columnNumberStart = 3, lineNumberEnd = 32, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sickness_Duration, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sickness_Duration, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 32, columnNumberStart = 3, lineNumberEnd = 32, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Time_to_Breakdown, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Time_to_Breakdown, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 32, columnNumberStart = 3, lineNumberEnd = 32, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), operator = DAE.Operator.DIV(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 24, columnNumberStart = 3, lineNumberEnd = 24, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), operator = DAE.Operator.DIV(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 24, columnNumberStart = 3, lineNumberEnd = 24, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), operator = DAE.Operator.DIV(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 24, columnNumberStart = 3, lineNumberEnd = 24, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), operator = DAE.Operator.DIV(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 24, columnNumberStart = 3, lineNumberEnd = 24, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.IFEXP(expCond = DAE.Exp.RELATION(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.LESS(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), index = -1, optionExpisASUB = NONE()), expThen = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), expElse = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 69, columnNumberStart = 3, lineNumberEnd = 69, columnNumberEnd = 47, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CALL(path = Absyn.Path.IDENT(name = der), expLst = {DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))}, attr = DAE.CallAttributes.CALL_ATTR(ty = DAE.Type.T_REAL(varLst = {NIL}), tuple_ = 0, builtin = 1, isImpure = 0, isFunctionPointerCall = 0, inlineType = DAE.InlineType.DEFAULT_INLINE(), tailCall = DAE.TailCall.NO_TAIL())), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.SUB(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 13, columnNumberStart = 3, lineNumberEnd = 13, columnNumberEnd = 21, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 14, columnNumberStart = 3, lineNumberEnd = 14, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CALL(path = Absyn.Path.IDENT(name = der), expLst = {DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))}, attr = DAE.CallAttributes.CALL_ATTR(ty = DAE.Type.T_REAL(varLst = {NIL}), tuple_ = 0, builtin = 1, isImpure = 0, isFunctionPointerCall = 0, inlineType = DAE.InlineType.DEFAULT_INLINE(), tailCall = DAE.TailCall.NO_TAIL())), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.SUB(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 13, columnNumberStart = 3, lineNumberEnd = 13, columnNumberEnd = 21, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 14, columnNumberStart = 3, lineNumberEnd = 14, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CALL(path = Absyn.Path.IDENT(name = der), expLst = {DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))}, attr = DAE.CallAttributes.CALL_ATTR(ty = DAE.Type.T_REAL(varLst = {NIL}), tuple_ = 0, builtin = 1, isImpure = 0, isFunctionPointerCall = 0, inlineType = DAE.InlineType.DEFAULT_INLINE(), tailCall = DAE.TailCall.NO_TAIL())), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.SUB(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 13, columnNumberStart = 3, lineNumberEnd = 13, columnNumberEnd = 21, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 14, columnNumberStart = 3, lineNumberEnd = 14, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CALL(path = Absyn.Path.IDENT(name = der), expLst = {DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))}, attr = DAE.CallAttributes.CALL_ATTR(ty = DAE.Type.T_REAL(varLst = {NIL}), tuple_ = 0, builtin = 1, isImpure = 0, isFunctionPointerCall = 0, inlineType = DAE.InlineType.DEFAULT_INLINE(), tailCall = DAE.TailCall.NO_TAIL())), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.SUB(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 13, columnNumberStart = 3, lineNumberEnd = 13, columnNumberEnd = 21, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 14, columnNumberStart = 3, lineNumberEnd = 14, columnNumberEnd = 12, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 41, columnNumberStart = 3, lineNumberEnd = 41, columnNumberEnd = 15, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 51, columnNumberStart = 3, lineNumberEnd = 51, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), operator = DAE.Operator.MUL(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 51, columnNumberStart = 3, lineNumberEnd = 51, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.ADD(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 60, columnNumberStart = 3, lineNumberEnd = 60, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.ADD(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 60, columnNumberStart = 3, lineNumberEnd = 60, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.ADD(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 60, columnNumberStart = 3, lineNumberEnd = 60, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.BINARY(exp1 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), operator = DAE.Operator.ADD(ty = DAE.Type.T_REAL(varLst = {NIL})), exp2 = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL}))), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 60, columnNumberStart = 3, lineNumberEnd = 60, columnNumberEnd = 22, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.EQUATION(exp = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), ty = DAE.Type.T_REAL(varLst = {NIL})), scalar = DAE.Exp.CREF(componentRef = DAE.ComponentRef.CREF_IDENT(ident = Introduction, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL}), ty = DAE.Type.T_REAL(varLst = {NIL})), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 123, columnNumberStart = 3, lineNumberEnd = 123, columnNumberEnd = 28, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())})), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_IDENT(ident = Introduction, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL}), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.INPUT(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 77)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 73, columnNumberStart = 3, lineNumberEnd = 73, columnNumberEnd = 31, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contraction_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 29, columnNumberStart = 3, lineNumberEnd = 29, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contraction_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 30, columnNumberStart = 3, lineNumberEnd = 30, columnNumberEnd = 23, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Period, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 29, columnNumberStart = 3, lineNumberEnd = 29, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Period, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 30, columnNumberStart = 3, lineNumberEnd = 30, columnNumberEnd = 23, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sickness_Duration, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 29, columnNumberStart = 3, lineNumberEnd = 29, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sickness_Duration, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 30, columnNumberStart = 3, lineNumberEnd = 30, columnNumberEnd = 23, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Time_to_Breakdown, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 29, columnNumberStart = 3, lineNumberEnd = 29, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Time_to_Breakdown, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Constants))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 30, columnNumberStart = 3, lineNumberEnd = 30, columnNumberEnd = 23, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 19, columnNumberStart = 3, lineNumberEnd = 19, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 20, columnNumberStart = 3, lineNumberEnd = 20, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 21, columnNumberStart = 3, lineNumberEnd = 21, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Activation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 22, columnNumberStart = 3, lineNumberEnd = 22, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 19, columnNumberStart = 3, lineNumberEnd = 19, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 20, columnNumberStart = 3, lineNumberEnd = 20, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 21, columnNumberStart = 3, lineNumberEnd = 21, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Cure_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 22, columnNumberStart = 3, lineNumberEnd = 22, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 19, columnNumberStart = 3, lineNumberEnd = 19, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 20, columnNumberStart = 3, lineNumberEnd = 20, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 21, columnNumberStart = 3, lineNumberEnd = 21, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Incubation, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 22, columnNumberStart = 3, lineNumberEnd = 22, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 19, columnNumberStart = 3, lineNumberEnd = 19, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 20, columnNumberStart = 3, lineNumberEnd = 20, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 21, columnNumberStart = 3, lineNumberEnd = 21, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Perc_Infected, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Division))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 22, columnNumberStart = 3, lineNumberEnd = 22, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 65, columnNumberStart = 3, lineNumberEnd = 65, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 66, columnNumberStart = 3, lineNumberEnd = 66, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infection_Rate, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Minimum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 67, columnNumberStart = 3, lineNumberEnd = 67, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 8, columnNumberStart = 3, lineNumberEnd = 8, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 9, columnNumberStart = 3, lineNumberEnd = 9, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 10, columnNumberStart = 3, lineNumberEnd = 10, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Immune_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 11, columnNumberStart = 3, lineNumberEnd = 11, columnNumberEnd = 26, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = SOME(DAE.VariableAttributes.VAR_ATTR_REAL(quantity = NONE(), unit = NONE(), displayUnit = NONE(), min = NONE(), max = NONE(), start = SOME(DAE.Exp.RCONST(real = 10)), fixed = NONE(), nominal = NONE(), stateSelectOption = NONE(), uncertainOption = NONE(), distributionOption = NONE(), equationBound = NONE(), isProtected = NONE(), finalPrefix = SOME(0), startOrigin = NONE())), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 8, columnNumberStart = 3, lineNumberEnd = 8, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 9, columnNumberStart = 3, lineNumberEnd = 9, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 10, columnNumberStart = 3, lineNumberEnd = 10, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 11, columnNumberStart = 3, lineNumberEnd = 11, columnNumberEnd = 26, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = SOME(DAE.VariableAttributes.VAR_ATTR_REAL(quantity = NONE(), unit = NONE(), displayUnit = NONE(), min = NONE(), max = NONE(), start = SOME(DAE.Exp.RCONST(real = 50)), fixed = NONE(), nominal = NONE(), stateSelectOption = NONE(), uncertainOption = NONE(), distributionOption = NONE(), equationBound = NONE(), isProtected = NONE(), finalPrefix = SOME(0), startOrigin = NONE())), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 8, columnNumberStart = 3, lineNumberEnd = 8, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 9, columnNumberStart = 3, lineNumberEnd = 9, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 10, columnNumberStart = 3, lineNumberEnd = 10, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Infected_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 11, columnNumberStart = 3, lineNumberEnd = 11, columnNumberEnd = 26, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = SOME(DAE.VariableAttributes.VAR_ATTR_REAL(quantity = NONE(), unit = NONE(), displayUnit = NONE(), min = NONE(), max = NONE(), start = SOME(DAE.Exp.RCONST(real = 100)), fixed = NONE(), nominal = NONE(), stateSelectOption = NONE(), uncertainOption = NONE(), distributionOption = NONE(), equationBound = NONE(), isProtected = NONE(), finalPrefix = SOME(0), startOrigin = NONE())), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 8, columnNumberStart = 3, lineNumberEnd = 8, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 9, columnNumberStart = 3, lineNumberEnd = 9, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 10, columnNumberStart = 3, lineNumberEnd = 10, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Sick_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Population))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = p, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 11, columnNumberStart = 3, lineNumberEnd = 11, columnNumberEnd = 26, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = SOME(DAE.VariableAttributes.VAR_ATTR_REAL(quantity = NONE(), unit = NONE(), displayUnit = NONE(), min = NONE(), max = NONE(), start = SOME(DAE.Exp.RCONST(real = 0)), fixed = NONE(), nominal = NONE(), stateSelectOption = NONE(), uncertainOption = NONE(), distributionOption = NONE(), equationBound = NONE(), isProtected = NONE(), finalPrefix = SOME(0), startOrigin = NONE())), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 37, columnNumberStart = 3, lineNumberEnd = 37, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 38, columnNumberStart = 3, lineNumberEnd = 38, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contacts_Wk, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product1))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 0.1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 39, columnNumberStart = 3, lineNumberEnd = 39, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 46, columnNumberStart = 3, lineNumberEnd = 46, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 47, columnNumberStart = 3, lineNumberEnd = 47, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 48, columnNumberStart = 3, lineNumberEnd = 48, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp1, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 49, columnNumberStart = 3, lineNumberEnd = 49, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 46, columnNumberStart = 3, lineNumberEnd = 46, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 47, columnNumberStart = 3, lineNumberEnd = 47, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 48, columnNumberStart = 3, lineNumberEnd = 48, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp2, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Product2))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = c, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.PARAM(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = SOME(DAE.Exp.RCONST(real = 1)), dims = {NIL}, connectorType = DAE.ConnectorType.NON_CONNECTOR(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 49, columnNumberStart = 3, lineNumberEnd = 49, columnNumberEnd = 24, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 56, columnNumberStart = 3, lineNumberEnd = 56, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 57, columnNumberStart = 3, lineNumberEnd = 57, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 58, columnNumberStart = 3, lineNumberEnd = 58, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 56, columnNumberStart = 3, lineNumberEnd = 56, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 57, columnNumberStart = 3, lineNumberEnd = 57, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Non_Contagious_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 58, columnNumberStart = 3, lineNumberEnd = 58, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 56, columnNumberStart = 3, lineNumberEnd = 56, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 57, columnNumberStart = 3, lineNumberEnd = 57, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Temp3, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 58, columnNumberStart = 3, lineNumberEnd = 58, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 56, columnNumberStart = 3, lineNumberEnd = 56, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = in_2, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 57, columnNumberStart = 3, lineNumberEnd = 57, columnNumberEnd = 18, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER()), DAE.Element.VAR(componentRef = DAE.ComponentRef.CREF_QUAL(ident = Total_Popul, identType = DAE.Type.T_COMPLEX(complexClassType = ClassInf.State.MODEL(path = Absyn.Path.QUALIFIED(name = Influenza, path = Absyn.Path.IDENT(name = Sum))), varLst = {NIL}, equalityConstraint = NONE()), subscriptLst = {NIL}, componentRef = DAE.ComponentRef.CREF_IDENT(ident = out_1, identType = DAE.Type.T_REAL(varLst = {NIL}), subscriptLst = {NIL})), kind = DAE.VarKind.VARIABLE(), direction = DAE.VarDirection.BIDIR(), parallelism = DAE.VarParallelism.NON_PARALLEL(), protection = DAE.VarVisibility.PUBLIC(), ty = DAE.Type.T_REAL(varLst = {NIL}), binding = NONE(), dims = {NIL}, connectorType = DAE.ConnectorType.POTENTIAL(), source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 58, columnNumberStart = 3, lineNumberEnd = 58, columnNumberEnd = 20, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {NIL}), variableAttributesOption = NONE(), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())), innerOuter = Absyn.InnerOuter.NOT_INNER_OUTER())}, source = DAE.ElementSource.SOURCE(info = SourceInfo.SOURCEINFO(fileName = /home/johti17/Tests/Influenza/Influenza.mo, isReadOnly = 0, lineNumberStart = 4, columnNumberStart = 1, lineNumberEnd = 128, columnNumberEnd = 14, lastEditTime = 1.599573e+09), partOfLst = {NIL}, instance = DAE.ComponentPrefix.NOCOMPPRE(), connectEquationOptLst = {NIL}, typeLst = {NIL}, operations = {NIL}, comment = {SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())}), comment = SOME(SCode.Comment.COMMENT(annotation_ = NONE(), comment = NONE())))})
